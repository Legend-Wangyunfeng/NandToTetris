// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/2/ALU.hdl
/**
 * ALU (Arithmetic Logic Unit):
 * Computes out = one of the following functions:
 *                0, 1, -1,
 *                x, y, !x, !y, -x, -y,
 *                x + 1, y + 1, x - 1, y - 1,
 *                x + y, x - y, y - x,
 *                x & y, x | y
 * on the 16-bit inputs x, y,
 * according to the input bits zx, nx, zy, ny, f, no.
 * In addition, computes the two output bits:
 * if (out == 0) zr = 1, else zr = 0
 * if (out < 0)  ng = 1, else ng = 0
 */
// Implementation: Manipulates the x and y inputs
// and operates on the resulting values, as follows:
// if (zx == 1) sets x = 0        // 16-bit constant
// if (nx == 1) sets x = !x       // bitwise not
// if (zy == 1) sets y = 0        // 16-bit constant
// if (ny == 1) sets y = !y       // bitwise not
// if (f == 1)  sets out = x + y  // integer 2's complement addition
// if (f == 0)  sets out = x & y  // bitwise and
// if (no == 1) sets out = !out   // bitwise not

CHIP ALU {
    IN  
        x[16], y[16],  // 16-bit inputs        
        zx, // zero the x input?
        nx, // negate the x input?
        zy, // zero the y input?
        ny, // negate the y input?
        f,  // compute (out = x + y) or (out = x & y)?
        no; // negate the out output?
    OUT 
        out[16], // 16-bit output
        zr,      // if (out == 0) equals 1, else 0
        ng;      // if (out < 0)  equals 1, else 0

    PARTS:
    //// Replace this comment with your code.

    Mux16 (a = x, b[0..15] = false, sel = zx, out = tmpx);
    Mux16 (a = y, b[0..15] = false, sel = zy, out = tmpy);

    Not16 (in = tmpx, out = ntmpx);
    Not16 (in = tmpy, out = ntmpy);

    Mux16 (a = tmpx, b = ntmpx, sel = nx, out = fx);
    Mux16 (a = tmpy, b = ntmpy, sel = ny, out = fy);

    And16 (a = fx, b = fy, out = f0);
    Add16 (a = fx, b = fy, out = f1);

    Mux16 (a = f0, b = f1, sel = f, out = tmpo);

    Not16 (in = tmpo, out = ntmpo);
    Mux16 (a = tmpo, b = ntmpo, sel = no, out = tmpout);

    And16 (a = tmpout, b = true, out[0..7] = ozr1, out[8..15] = ozr2, out[15] = out15,out = out);

    Or8Way (in = ozr1, out = zr1);
    Or8Way (in = ozr2, out = zr2);
    Or (a = zr1, b = zr2, out = nzr);
    Not (in = nzr, out = zr);

    Mux (a = false, b = true, sel = out15, out = ng);
}