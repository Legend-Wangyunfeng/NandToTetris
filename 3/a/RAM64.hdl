// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/3/a/RAM64.hdl
/**
 * Memory of sixty four 16-bit registers.
 * If load is asserted, the value of the register selected by
 * address is set to in; Otherwise, the value does not change.
 * The value of the selected register is emitted by out.
 */
CHIP RAM64 {
    IN in[16], load, address[6];
    OUT out[16];

    PARTS:
    //// Replace this comment with your code.
    And16 (a[0..5] = address, a[6..15] = true, b = true, out[0..2] = addR, out[3..5] = addL);
    DMux8Way (in = load, sel = addL, a = A, b = B, c = C, d = D, e = E, f = F, g = G, h = H);

    RAM8 (in = in, load = A, address = addR, out = outA);
    RAM8 (in = in, load = B, address = addR, out = outB);
    RAM8 (in = in, load = C, address = addR, out = outC);
    RAM8 (in = in, load = D, address = addR, out = outD);
    RAM8 (in = in, load = E, address = addR, out = outE);
    RAM8 (in = in, load = F, address = addR, out = outF);
    RAM8 (in = in, load = G, address = addR, out = outG);
    RAM8 (in = in, load = H, address = addR, out = outH);

    Mux8Way16(a = outA, b = outB, c = outC, d = outD, e = outE, f = outF, g = outG, h = outH, sel = addL, out = out);
}
